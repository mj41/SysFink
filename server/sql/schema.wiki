=== Header ===

<!-- perl utils\wiki_schema.pl sql\schema.wiki 1 > sql\schema.sql -->
<!-- PARSE PART DBCREATE BEGIN -->
<source lang=sql>
-- schema revision: $LastChangedRevision: 358 $
SET FOREIGN_KEY_CHECKS=0;
begin transaction;

-- Tags_order: Config, Machine, User.
</source>

=== Tables ===

==== Table machine (m) ====
<source lang=sql>
CREATE TABLE machine (
    machine_id      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name            VARCHAR(50) NOT NULL,
    legend          TEXT DEFAULT NULL COMMENT 'Description.',
    ip              VARCHAR(15) DEFAULT NUL,
    disabled        BOOLEAN NOT NULL DEFAULT 0,
    INDEX i_name (name)
) TYPE=InnoDB COMMENT='Machine (computer or virtual machine) info. Tag:Machine.';
</source>

==== Table mconf ====
<source lang=sql>
CREATE TABLE mconf (
    mconf_sec_id    INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    machine_id      INT UNSIGNED NOT NULL,
    active          INT UNSIGNED NOT NULL,
    create_time     DATETIME NOT NULL,
    INDEX i_machine (machine_id),
    INDEX i_machine_id_active (machine_id, active),
    CONSTRAINT fk_mconf_machine_id FOREIGN KEY (machine_id) REFERENCES machine (machine_id)
) TYPE=InnoDB COMMENT='Machine configuratio. Tag:Machine.';
</source>

Consistency:
* Only one active for each machine_id.

==== Table mconf_sec ====
<source lang=sql>
CREATE TABLE mconf_sec (
    mconf_sec_id    INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_id        INT UNSIGNED NOT NULL,
    name            VARCHAR(50) NOT NULL,
    INDEX i_mconf_id (mconf_id),
    INDEX i_mconf_id_name (mconf_id, name),
    CONSTRAINT fk_mconf_sec_mconf_id FOREIGN KEY (mconf_id) REFERENCES mconf (mconf_id)
) TYPE=InnoDB COMMENT='Machine configuratio section. Tag:Machine.';
</source>

Consistency:
* Each name is unique for each mconf_id.

==== Table mconf_sec_kv ====
<source lang=sql>
CREATE TABLE mconf_sec_kv (
    mconf_sec_kv_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_sec_id        INT UNSIGNED NOT NULL,
    num                 INT UNSIGNED DEFAULT NULL,
    `key`               VARCHAR(50) NOT NULL,
    value               VARCHAR(255) NOT NULL,
    INDEX i_mconf_sec_id (mconf_sec_id),
    INDEX i_mconf_sec_id_num (mconf_sec_id, num),
    CONSTRAINT fk_mconf_sec_kv_mconf_sec_id FOREIGN KEY (mconf_sec_id) REFERENCES mconf_sec (mconf_sec_id)
) TYPE=InnoDB COMMENT='Machine configuration section key and value pairs. Tag:Machine.';
</source>

Consistency:
* num is sequent for each mconf_sec_id.

=== Table path ===
<source lang=sql>
CREATE TABLE path (
    path_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    path        VARCHAR(255) NOT NULL,
    INDEX i_path (path)
) TYPE=InnoDB COMMENT='All (machine, packages) paths. Tag:Path.';
</source>

=== Table scan (sc) ===
<source lang=sql>
CREATE TABLE scan (
    scan_id         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_sec_id    INT UNSIGNED NOT NULL,
    start_time      DATETIME NOT NULL,
    stop_time       DATETIME DEFAULT NULL,
    pid             INT UNSIGNED NOT NULL COMMENT 'OS process id of scanning process.',
    items           INT UNSIGNED DEFAULT NULL COMMENT 'Number of items found during the scan.',
    INDEX i_mconf_sec_id (mconf_sec_id),
    CONSTRAINT fk_scan_mconf_sec_id FOREIGN KEY (mconf_sec_id) REFERENCES mconf_sec (mconf_sec_id)
) TYPE=InnoDB COMMENT='Machine scan. Tag:Scan.';
</source>

=== Table sc_mitem ===
<source lang=sql>
CREATE TABLE sc_mitem (
    sc_mitem_id         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    machine_id          INT UNSIGNED NOT NULL,
    path_id             INT UNSIGNED NOT NULL,
    INDEX i_machine_id (machine_id),
    CONSTRAINT fk_sc_mitem_machine_id FOREIGN KEY (machine_id) REFERENCES machine (machine_id),
    CONSTRAINT fk_sc_mitem_path_id FOREIGN KEY (path_id) REFERENCES path (path_id)
) TYPE=InnoDB COMMENT='Machine paths (all history). Tag:Scan.';
</source>

=== Table sc_idata ===
<source lang=sql>
CREATE TABLE sc_idata (
    sc_idata_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    sc_mitem_id     INT UNSIGNED NOT NULL,
    scan_id         INT UNSIGNED NOT NULL,
    newer_id        INT UNSIGNED DEFAULT NULL,
    found           BOOL UNSIGNED NOT NULL,
    mtime           DATETIME DEFAULT NULL,
    mode            INT UNSIGNED DEFAULT NULL,
    size            INT UNSIGNED DEFAULT NULL,
    uid             INT UNSIGNED DEFAULT NULL,
    user_name       VARCHAR(50) DEFAULT NULL,
    gid             INT UNSIGNED DEFAULT NULL,
    group_name      VARCHAR(50) DEFAULT NULL,
    hash            VARCHAR(32) DEFAULT NULL,
    nlink           INT UNSIGNED DEFAULT NULL,
    dev_num         INT UNSIGNED DEFAULT NULL,
    ino_num         INT UNSIGNED DEFAULT NULL,
    INDEX i_sc_mitem_id (sc_mitem_id),
    INDEX i_sc_mitem_id_found (sc_mitem_id, found),
    INDEX i_sc_mitem_id_found_newer_id (sc_mitem_id, found, newer_id),
    CONSTRAINT fk_sc_idata_sc_mitem_id FOREIGN KEY (sc_mitem_id) REFERENCES sc_mitem (sc_mitem_id),
    CONSTRAINT fk_sc_idata_scan_id FOREIGN KEY (scan_id) REFERENCES scan (scan_id),
    CONSTRAINT fk_sc_idata_newer_id FOREIGN KEY (newer_id) REFERENCES sc_idata (sc_idata_id)
) TYPE=InnoDB COMMENT='Machine scan item data. Tag:Scan.';
</source>

Consistency:
* Only 'found' or 'missiong' should have value equal 1.

==== Table user ====
<source lang=sql>
CREATE TABLE user (
    user_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Primary key',
    login       VARCHAR(20) NOT NULL,
    passwd      VARCHAR(20) NOT NULL,
    first_name  VARCHAR(255) NOT NULL DEFAULT '',
    last_name   VARCHAR(255) NOT NULL DEFAULT '',
    active      BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Zero means historical data.',
    created     DATETIME NOT NULL COMMENT 'Account creation time.',
    INDEX i_login (login)
) TYPE=InnoDB COMMENT='User info. Tag:User.';
</source>


=== Table rev_status_id ===
<source lang=sql>
CREATE TABLE rev_status (
    rev_status_id       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name                VARCHAR(10) DEFAULT NULL,
    legend              VARCHAR(1500) DEFAULT NULL
) TYPE=InnoDB COMMENT='Possibilites for item audit status. Tag:Rev. Type:Table of keys.';
</source>

* name, legend
** my ok -- Ok. I did it.
** ok - Ok. I didn't do it.
** unknown - I don't know. 
** error - Error. Somebody should fix it.
** alert - Security alert. Fix it soon.

=== Table rev ===
<source lang=sql>
CREATE TABLE rev (
    rev_id      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date        DATETIME NOT NULL,
    user_id     INT UNSIGNED NOT NULL,
    msg         VARCHAR(1000) DEFAULT NULL,
    CONSTRAINT fk_rev_user_id FOREIGN KEY (user_id) REFERENCES user (user_id)
) TYPE=InnoDB COMMENT='One revision info and summary message. Tag:Rev.';
</source>

=== Table rev_idata ===
<source lang=sql>
CREATE TABLE rev_idata (
    rev_idata_id        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    rev_id              INT UNSIGNED NOT NULL,
    sc_idata_id         INT UNSIGNED NOT NULL,
    rev_status_id       INT UNSIGNED NOT NULL,
    newer_id            INT UNSIGNED DEFAULT NULL COMMENT 'Newer rev_idata_id whitch can supersede this one.',
    CONSTRAINT fk_rev_idata_rev_id FOREIGN KEY (rev_id) REFERENCES rev (rev_id),
    CONSTRAINT fk_rev_idata_sc_idata_id FOREIGN KEY (sc_idata_id) REFERENCES sc_idata (sc_idata_id),
    CONSTRAINT fk_rev_idata_rev_status_id FOREIGN KEY (rev_status_id) REFERENCES rev_status (rev_status_id),
    CONSTRAINT fk_rev_idata_newer_id FOREIGN KEY (newer_id) REFERENCES rev_idata (rev_idata_id)
) TYPE=InnoDB COMMENT='Revision status of one file info (of one scan). Tag:Rev.';
</source>

=== Footer ===

<source lang=sql>
commit;
</source>
<!-- PARSE PART DBCREATE END -->
