=== Header ===

<!-- perl utils\wiki_schema.pl sql\schema.wiki 1 > sql\schema.sql -->
<!-- PARSE PART DBCREATE BEGIN -->
<source lang=sql>
-- schema revision: $LastChangedRevision$
SET FOREIGN_KEY_CHECKS=0;
start transaction;

-- Tags_order: User.
</source>

=== Tables ===

==== Table user ====
<source lang=sql>
CREATE TABLE user (
    user_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Primary key',
    login       VARCHAR(20) NOT NULL,
    passwd      VARCHAR(20) NOT NULL,
    who         VARCHAR(20) DEFAULT NULL,
    first_name  VARCHAR(255) NOT NULL DEFAULT '',
    last_name   VARCHAR(255) NOT NULL DEFAULT '',
    active      BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Zero means historical data.',
    created     DATETIME NOT NULL COMMENT 'Account creation time.',
    INDEX i_login (login),
    UNIQUE KEY unique_login_active (login, active)
) TYPE=InnoDB COMMENT='User info. Tag:User.';
</source>

Consistency and constraints:
* Unique ( who, active ) for each not null 'who's.
* Nobody has 'who' same as anyone else 'login'.
* Only one person has password for each 'who' account on sysfink server.

==== Table machine (m) ====
<source lang=sql>
CREATE TABLE machine (
    machine_id      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name            VARCHAR(50) NOT NULL,
    descr           TEXT DEFAULT NULL COMMENT 'Description.',
    ip              VARCHAR(15) DEFAULT NULL,
    active          BOOLEAN NOT NULL DEFAULT 1,
    INDEX i_name (name)
) TYPE=InnoDB COMMENT='Machine (computer or virtual machine) info. Tag:Machine.';
</source>

==== Table mconf_change ====
<source lang=sql>
CREATE TABLE mconf_change (
    mconf_change_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date            DATETIME NOT NULL,
    user_id         INT UNSIGNED DEFAULT NULL,
    found           INT UNSIGNED NOT NULL DEFAULT 0,
    added           INT UNSIGNED NOT NULL DEFAULT 0,
    changed         INT UNSIGNED NOT NULL DEFAULT 0,
    removed         INT UNSIGNED NOT NULL DEFAULT 0,
    CONSTRAINT fk_mconf_change_user_id FOREIGN KEY (user_id) REFERENCES user (user_id)
) TYPE=InnoDB COMMENT='Machine (computer or virtual machine) info. Tag:Machine.';
</source>

==== Table mconf ====
<source lang=sql>
CREATE TABLE mconf (
    mconf_id        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    machine_id      INT UNSIGNED NOT NULL,
    mconf_change_id INT UNSIGNED NOT NULL,
    active          INT UNSIGNED NOT NULL,
    INDEX i_machine (machine_id),
    INDEX i_machine_id_active (machine_id, active),
    CONSTRAINT fk_mconf_mconf_change_id FOREIGN KEY (mconf_change_id) REFERENCES mconf_change (mconf_change_id),
    CONSTRAINT fk_mconf_machine_id FOREIGN KEY (machine_id) REFERENCES machine (machine_id)
) TYPE=InnoDB COMMENT='Machine configuratio. Tag:Machine.';
</source>

Consistency:
* Only one active for each machine_id. Relevant mconf_change should be the last one.

==== Table mconf_sec ====
<source lang=sql>
CREATE TABLE mconf_sec (
    mconf_sec_id    INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_id        INT UNSIGNED NOT NULL,
    name            VARCHAR(50) NOT NULL,
    INDEX i_mconf_id (mconf_id),
    INDEX i_mconf_id_name (mconf_id, name),
    CONSTRAINT fk_mconf_sec_mconf_id FOREIGN KEY (mconf_id) REFERENCES mconf (mconf_id)
) TYPE=InnoDB COMMENT='Machine configuratio section. Tag:Machine.';
</source>

Consistency:
* Each name is unique for each mconf_id.

==== Table mconf_sec_kv ====
<source lang=sql>
CREATE TABLE mconf_sec_kv (
    mconf_sec_kv_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_sec_id        INT UNSIGNED NOT NULL,
    num                 INT UNSIGNED DEFAULT NULL,
    name                VARCHAR(50) NOT NULL,
    value               VARCHAR(255) NOT NULL,
    INDEX i_mconf_sec_id (mconf_sec_id),
    INDEX i_mconf_sec_id_num (mconf_sec_id, num),
    CONSTRAINT fk_mconf_sec_kv_mconf_sec_id FOREIGN KEY (mconf_sec_id) REFERENCES mconf_sec (mconf_sec_id)
) TYPE=InnoDB COMMENT='Machine configuration section key and value pairs. Tag:Machine.';
</source>

Consistency:
* num is sequent for each mconf_sec_id.

=== Table path ===
<source lang=sql>
CREATE TABLE path (
    path_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    path        VARCHAR(255) NOT NULL,
    INDEX i_path (path)
) TYPE=InnoDB COMMENT='All (machine, packages) paths. Tag:Path.';
</source>

=== Table scan (sc) ===
<source lang=sql>
CREATE TABLE scan (
    scan_id         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_sec_id    INT UNSIGNED NOT NULL,
    start_time      DATETIME NOT NULL,
    stop_time       DATETIME DEFAULT NULL,
    pid             INT UNSIGNED NOT NULL COMMENT 'OS process id of scanning process.',
    items           INT UNSIGNED DEFAULT NULL COMMENT 'Number of items found during the scan.',
    INDEX i_mconf_sec_id (mconf_sec_id),
    CONSTRAINT fk_scan_mconf_sec_id FOREIGN KEY (mconf_sec_id) REFERENCES mconf_sec (mconf_sec_id)
) TYPE=InnoDB COMMENT='Machine scan. Tag:Scan.';
</source>

=== Table sc_mitem ===
<source lang=sql>
CREATE TABLE sc_mitem (
    sc_mitem_id         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    machine_id          INT UNSIGNED NOT NULL,
    path_id             INT UNSIGNED NOT NULL,
    INDEX i_machine_id (machine_id),
    CONSTRAINT fk_sc_mitem_machine_id FOREIGN KEY (machine_id) REFERENCES machine (machine_id),
    CONSTRAINT fk_sc_mitem_path_id FOREIGN KEY (path_id) REFERENCES path (path_id)
) TYPE=InnoDB COMMENT='Machine paths (all history). Tag:Scan.';
</source>

=== Table sc_idata ===
<source lang=sql>
CREATE TABLE sc_idata (
    sc_idata_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    sc_mitem_id     INT UNSIGNED NOT NULL,
    scan_id         INT UNSIGNED NOT NULL,
    newer_id        INT UNSIGNED DEFAULT NULL,
    found           BOOLEAN NOT NULL,
    mtime           DATETIME DEFAULT NULL,
    mode            INT UNSIGNED DEFAULT NULL,
    size            INT UNSIGNED DEFAULT NULL,
    uid             INT UNSIGNED DEFAULT NULL,
    user_name       VARCHAR(50) DEFAULT NULL,
    gid             INT UNSIGNED DEFAULT NULL,
    group_name      VARCHAR(50) DEFAULT NULL,
    hash            VARCHAR(32) DEFAULT NULL,
    nlink           INT UNSIGNED DEFAULT NULL,
    dev_num         INT UNSIGNED DEFAULT NULL,
    ino_num         INT UNSIGNED DEFAULT NULL,
    symlink_path_id INT UNSIGNED DEFAULT NULL,
    INDEX i_newer_id (newer_id),
    INDEX i_sc_mitem_id (sc_mitem_id),
    INDEX i_sc_mitem_id_found (sc_mitem_id, found),
    INDEX i_sc_mitem_id_found_newer_id (sc_mitem_id, found, newer_id),
    CONSTRAINT fk_sc_idata_sc_mitem_id FOREIGN KEY (sc_mitem_id) REFERENCES sc_mitem (sc_mitem_id),
    CONSTRAINT fk_sc_idata_scan_id FOREIGN KEY (scan_id) REFERENCES scan (scan_id),
    CONSTRAINT fk_sc_idata_newer_id FOREIGN KEY (newer_id) REFERENCES sc_idata (sc_idata_id),
    CONSTRAINT fk_sc_idata_symlink_path_id FOREIGN KEY (symlink_path_id) REFERENCES path (path_id)
) TYPE=InnoDB COMMENT='Machine scan item data. Tag:Scan.';
</source>

Consistency:
* Only 'found' or 'missiong' should have value equal 1.

=== Table aud_status ===
<source lang=sql>
CREATE TABLE aud_status (
    aud_status_id       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name                VARCHAR(10) DEFAULT NULL,
    descr               VARCHAR(1500) DEFAULT NULL
) TYPE=InnoDB COMMENT='Possibilites for item audit status. Tag:Audit. Type:Table of keys.';
</source>

* name, descr
** my ok -- Ok. I did it.
** ok - Ok. I didn't do it.
** unknown - I don't know. 
** error - Error. Somebody should fix it.
** alert - Security alert. Fix it soon.

=== Table aud ===
<source lang=sql>
CREATE TABLE aud (
    aud_id      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date        DATETIME NOT NULL,
    user_id     INT UNSIGNED NOT NULL,
    msg         VARCHAR(1000) DEFAULT NULL,
    CONSTRAINT fk_aud_user_id FOREIGN KEY (user_id) REFERENCES user (user_id)
) TYPE=InnoDB COMMENT='One audit info and summary message. Tag:Audit.';
</source>

=== Table aud_idata ===
<source lang=sql>
CREATE TABLE aud_idata (
    aud_idata_id        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    aud_id              INT UNSIGNED NOT NULL,
    sc_idata_id         INT UNSIGNED NOT NULL,
    aud_status_id       INT UNSIGNED NOT NULL,
    newer_id            INT UNSIGNED DEFAULT NULL COMMENT 'Newer aud_idata_id whitch can supersede this one.',
    CONSTRAINT fk_aud_idata_aud_id FOREIGN KEY (aud_id) REFERENCES aud (aud_id),
    CONSTRAINT fk_aud_idata_sc_idata_id FOREIGN KEY (sc_idata_id) REFERENCES sc_idata (sc_idata_id),
    CONSTRAINT fk_aud_idata_aud_status_id FOREIGN KEY (aud_status_id) REFERENCES aud_status (aud_status_id),
    CONSTRAINT fk_aud_idata_newer_id FOREIGN KEY (newer_id) REFERENCES aud_idata (aud_idata_id)
) TYPE=InnoDB COMMENT='Audit status of one file info (of one scan). Tag:Audit.';
</source>

=== Table pkg_type ===
<source lang=sql>
CREATE TABLE pkg_type (
    pkg_type_id         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name                VARCHAR(10) DEFAULT NULL,
    descr               VARCHAR(1500) DEFAULT NULL
) TYPE=InnoDB COMMENT='Possibilites for packages types. Tag:Package. Type:Table of keys.';
</source>

=== Table pkg ===
<source lang=sql>
CREATE TABLE pkg (
    pkg_id      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name        VARCHAR(10) NOT NULL,
    info        VARCHAR(500) DEFAULT NULL,
    descr       VARCHAR(500) DEFAULT NULL COMMENT 'Description for newes version of packege.',
    pkg_type_id INT UNSIGNED NOT NULL,
    sub_path    VARCHAR(500) DEFAULT NULL,
    CONSTRAINT fk_pkg_pkg_type_id FOREIGN KEY (pkg_type_id) REFERENCES pkg_type (pkg_type_id)
) TYPE=InnoDB COMMENT='List of packages names. Tag:Package.';
</source>

=== Table pkg_load ===
<source lang=sql>
CREATE TABLE pkg_load (
    pkg_load_id         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id             INT UNSIGNED DEFAULT NULL,
    date                DATETIME NOT NULL,
    found               INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Number of pkgs found during loading.',
    added               INT UNSIGNED NOT NULL DEFAULT 0,
    changed             INT UNSIGNED NOT NULL DEFAULT 0,
    removed             INT UNSIGNED NOT NULL DEFAULT 0,
    CONSTRAINT fk_pkg_load_user_id FOREIGN KEY (user_id) REFERENCES user (user_id)
) TYPE=InnoDB COMMENT='Log for packages loading. Tag:Package.';
</source>
    
=== Table pkg_ver ===
<source lang=sql>
CREATE TABLE pkg_ver (
    pkg_ver_id          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    pkg_load_id         INT UNSIGNED NOT NULL,
    pkg_id              INT UNSIGNED NOT NULL,
    ver                 VARCHAR(30) NOT NULL,
    CONSTRAINT fk_pkg_ver_pkg_load_id FOREIGN KEY (pkg_load_id) REFERENCES pkg_load (pkg_load_id),
    CONSTRAINT fk_pkg_ver_pkg_id FOREIGN KEY (pkg_id) REFERENCES pkg (pkg_id)
) TYPE=InnoDB COMMENT='Available versions for each package. Tag:Package.';
</source>

=== Table pkg_item ===
<source lang=sql>
CREATE TABLE pkg_item (
    pkg_item_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    pkg_ver_id      INT UNSIGNED NOT NULL,
    path_id         INT UNSIGNED NOT NULL,
    mtime           DATETIME DEFAULT NULL,
    mode            INT UNSIGNED DEFAULT NULL,
    size            INT UNSIGNED DEFAULT NULL,
    uid             INT UNSIGNED DEFAULT NULL,
    user_name       VARCHAR(50) DEFAULT NULL,
    gid             INT UNSIGNED DEFAULT NULL,
    group_name      VARCHAR(50) DEFAULT NULL,
    hash            VARCHAR(32) DEFAULT NULL,
    CONSTRAINT pkg_item_pkg_ver_id FOREIGN KEY (pkg_ver_id) REFERENCES pkg_ver (pkg_ver_id),
    CONSTRAINT fk_pkg_item_path_id FOREIGN KEY (path_id) REFERENCES path (path_id)
) TYPE=InnoDB COMMENT='Items and attributes for each package version. Tag:Package.';
</source>

=== Table mpkg ===
<source lang=sql>
CREATE TABLE mpkg (
    mpkg_id     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mconf_id    INT UNSIGNED NOT NULL,
    pkg_id      INT UNSIGNED NOT NULL,
    ver_regex   VARCHAR(50) DEFAULT NULL,
    pos         INT UNSIGNED NOT NULL,
    CONSTRAINT fk_mpkg_mconf_id FOREIGN KEY (mconf_id) REFERENCES mconf (mconf_id),
    CONSTRAINT fk_mpkg_pkg_id FOREIGN KEY (pkg_id) REFERENCES pkg (pkg_id)
) TYPE=InnoDB COMMENT='Machine packages definition. Tag:Machine_package.';
</source>


=== Table mpkg_ver ===
<source lang=sql>
CREATE TABLE mpkg_ver (
    mpkg_ver_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mpkg_id     INT UNSIGNED NOT NULL,
    pkg_load_id INT UNSIGNED NOT NULL,
    pkg_ver_id  INT UNSIGNED NOT NULL,
    CONSTRAINT fk_mpkg_ver_mpkg_id FOREIGN KEY (mpkg_id) REFERENCES mpkg (mpkg_id),
    CONSTRAINT fk_mpkg_ver_pkg_load_id FOREIGN KEY (pkg_load_id) REFERENCES pkg_load (pkg_load_id),
    CONSTRAINT fk_mpkg_ver_pkg_ver_id FOREIGN KEY (pkg_ver_id) REFERENCES pkg_ver (pkg_ver_id)
) TYPE=InnoDB COMMENT='Concrete package versions for each machine. Tag:Machine_package.';
</source>

=== Table mpkg_sitem ===
<source lang=sql>
CREATE TABLE mpkg_sitem (
    mpkg_sitem_id       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    mpkg_ver_id         INT UNSIGNED NOT NULL,
    pkg_item_id         INT UNSIGNED NOT NULL,
    CONSTRAINT fk_mpkg_sitem_mpkg_ver_id FOREIGN KEY (mpkg_ver_id) REFERENCES mpkg_ver (mpkg_ver_id),
    CONSTRAINT fk_mpkg_sitem_pkg_item_id FOREIGN KEY (pkg_item_id) REFERENCES pkg_item (pkg_item_id)
) TYPE=InnoDB COMMENT='Items which should be skipped when creating package items list for the machine. Tag:Machine_package.';
</source>

=== Footer ===

<source lang=sql>
commit;
</source>
<!-- PARSE PART DBCREATE END -->
